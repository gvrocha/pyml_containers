# To get the image from docker hub: 
> docker image pull gvrocha/pyml_containers:pytorch1.9

# To run the image as an interactive container: 
> docker container run -it gvrocha/pyml_containers:pytorch1.9 /bin/bash

# To build an image from a specific Dockerfile (-f) with a specific tag (-t):
> docker image build -t gvrocha/pyml_containers:pytorch1.9-esm -f ./py3-pytorch1.9-esm/Dockerfile .

# List local images: 
> docker image ls

# List all local images: 
> docker image ls -a

# List local containers: 
> docker container ls

# List local containers (including those stopped): 
> docker container ls -a
	
# Remove specific containers: 
> docker container rm <container_IDs OR container NAMES separated by space> 

# Remove specific images: 
> docker image rm <image_tag> 
	
# Tag a local image and push it to docker hub 
> docker image tag pyml_containers:pytorch1.9-esm gvrocha/pyml_containers:pytorch1.9-esm
> docker image push gvrocha/pyml_containers:pytorch1.9-esm

# Build a Singularity image from Docker hub
singularity build /users/gvrocha/containers/pytorch1.9-esm.simg docker://gvrocha/pyml_containers:pytorch1.9-esm

# Once Singularity image is built, it can be run interactively
singularity run --containall -B /a_host_directory:/path_to_host_directory_in_container /users/gvrocha/containers/pytorch1.9-esm.simg 

# Once Singularity image is built, commands may be dispatched to it
singularity run --containall -B /users/gvrocha/dev:/aaa pytorch1.9-esm.simg ls -l /aaa

# This contains some interesting singularity examples:
https://hpc.nih.gov/training/handouts/170801_singularity_demo.html

# Other useful commands:
> docker system df

# Discard unused files:
> docker image prune

# Login to docker on local machine (so can push automatically):
docker login # will prompt for username and password
docker login -u "myusername" -p "mypassword"
docker logout # to logout from current user
docker info # tells which login is currently in use; look for Username in output
See also: docker help login

# First time git setup
See https://git-scm.com/book/en/v2/Getting-Started-First-Time-Git-Setup
git config -l
git config --global user.name "username"
git config --global user.email "username@mycoolserver.com"
